
--Are there any columns with null values in the Users table? If so, how many?

Select

    SUM(CASE WHEN id IS NULL THEN 1 ELSE 0 END) as col1nulls,

    SUM(CASE WHEN name IS NULL THEN 1 ELSE 0 END) as col2nulls,

    SUM(CASE WHEN review_count IS NULL THEN 1 ELSE 0 END) as col3nulls,

    SUM(CASE WHEN yelping_since IS NULL THEN 1 ELSE 0 END) as col4nulls,

    SUM(CASE WHEN useful IS NULL THEN 1 ELSE 0 END) as col5nulls,

    SUM(CASE WHEN funny IS NULL THEN 1 ELSE 0 END) as col6nulls

FROM

    user



--Pick one city and category of your choice and group the businesses in that city or
category by their overall star rating. Compare the businesses with 2-3 stars to
the businesses with 4-5 stars and answer the following questions.


Select

    a.name,

    a.city,

    a.stars,

    b.category,

    c.hours,

    a.review_count

FROM

    business a JOIN category b ON a.id = b.business_id

    JOIN hours c ON b.business_id = c.business_id

WHERE (b.category = 'Restaurants' AND

a.city = 'Toronto') AND

(a.stars BETWEEN 2 and 3 OR 

a.stars BETWEEN 4 and 5)

Group by a.name

Order by a.city

--Write an SQL query to swap all 'f' and 'm' values (i.e., change all 'f' values to 'm' and vice versa) with a single update statement and no intermediate temporary tables.

Update 
     Salary
SET 
     sex = (CASE
          WHEN sex = 'f' Then 'm'
          ELSE 'f'
          END)

--Write an SQL query to report the movies with an odd-numbered ID and a description that is not "boring". Return the result table ordered by rating in descending order.

Select 
    *
FROM 
    Cinema
WHERE
    id%2 != 0
    AND description != 'boring'
Order by rating desc


--Write an SQL query to find all dates' Id with higher temperatures compared to its previous dates (yesterday).

Select
    a.id
FROM
    Weather a Join Weather b ON Datediff(a.recorddate, b.recorddate) = 1
    AND a.temperature > b.temperature

--Write an SQL query to find the employees who earn more than their managers.

Select
   a.name AS 'Employee'
FROM
    Employee AS a,
    Employee AS b
WHERE
    a.managerid = b.id
    AND a.salary > b.salary
